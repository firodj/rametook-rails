elem_id = "sms_reply_offset_#{@sms_reply.id}"
options = @render_options || {}
options[:partial] ||= 'item'
options[:locals]  = {:offset => ''}.update( options[:locals] || {})

# message
page['message'].hide
page.replace_html "message", options[:message]
if options[:message] then
  page.insert_html :top, 'message', 
    [ print_words('sms reply').capitalize_words, @sms_reply.display_name, options[:message] ].join(' ')
  page['message'].show
end

# fade / show item
if options[:fade] then
  page.visual_effect :fade, "sms_reply_#{@sms_reply.id}", 
    :afterFinish => "function() { $('sms_reply_#{@sms_reply.id}').remove(); }"
else
  page << %Q{txt = $("#{elem_id}").innerHTML}
  page.replace_html "sms_reply_#{@sms_reply.id}", :partial => options[:partial], :locals => options[:locals]
  page << %Q{$("#{elem_id}").update(txt)}
end

# highlite effect
if options[:highlight] then
  fx = case options[:highlight]
    when :white
      {:startcolor => "'#BFBFBF'", :endcolor => "'#FFFFFF'"}
    when :red
      {:startcolor => "'#BFBFBF'", :endcolor => "'#FF8F8F'"}
    else
      {}
    end
  
  page.visual_effect :highlight, "sms_reply_#{@sms_reply.id}", fx
end
